Part1:用户信息查询操作
(一)后端实现
1.准备Query，继承BaseQuery，写查询的条件
    (1)继承BaseQuery，原因是BaseQuery中有分页所需要的参数
    (2)新写的参数与需求对应
    (3)对应的vo包下的User可以给时间设置格式: @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss", timezone = "GMT+8")

2.写接口，继承Base接口

3.在Mappers文件中写对应的SQL语句

4.service：数据查询，返回Map，Base中有现成的，继承即可

5.controller：提供可以访问的路径
(1)编写转发到对应页面("ftl文件")的方法的路径，需要在main.ftl文件中找对应功能的data-tab的路径
(2)调用service层方法的路径与对应"js"文件的url相同(当然也可以改前端页面的路径)


(二)前端实现
绑定
1.功能绑定：(1).如果我要搜索功能，绑定的功能对应的id去ftl文件找，没有id的话加一个呗,功能对应参数要对应上

-------------------------------------------------------------------------------------------------------------------------------------------
Part2:用户添加与更新操作
(一)前端实现
1.绑定头部工具栏：ftl文件的table表格下的lay-filter属性的名字,放在toolbar内
2.行工具栏是一样的，就是table.on里面是tool
3.更新与添加的区别:(1)多一个id(加一个id参数,栓Q)
                (2)需要填充用户数据:(在Controller层查询用户信息，设置作用域)，(js中的为更新的url拼接ID)
                   更新的ftl文件中对应的EL表达式会展现出这些内容

(二)后端实现
1.Controller
调用service层的添加方法，返回ResultInfo格式的数据

2.Service
添加用户
(1)、参数校验
 1.userName    非空且唯一
 2.trueName   非空
 3.email  非空
 4.phone   非空且格式正确
(2)、设置默认值
 1.isValid   1
 2.createDate    系统当前时间
 3.updateDate    系统当前时间
 4.userPwd       123456(默认密码，需要加密)(Md5Util.encode())
 (3)、执行添加操作，判断受影响行数






